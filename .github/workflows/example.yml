name: EXAMPLE PULL REQUEST OPEN
on:
  pull_request:
    types: ["opened", "edited", "synchronize"]
    branches: ["development"]

jobs:
  deploy:
    name: Development Theme
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1
          bundler: 'latest'

      - name: Install Shopify CLI
        run: npm install -g @shopify/cli @shopify/theme

      - name: Deploy
        env:
          # Store URL, like your-store.myshopify.com
          SHOPIFY_FLAG_STORE: '${{ secrets.SHOP_STORE }}'
          # Password generated from Theme Access app
          SHOPIFY_CLI_THEME_TOKEN: ${{ secrets.SHOPIFY_CLI_THEME_TOKEN }}
          SHOPIFY_CLI_TTY: 0
        run: shopify theme push --path ./ --theme ${{ secrets.THEME_ID_PREVIEW }}
  
  #clean:
  #  runs-on: ubuntu-latest
  #
  #  permissions:
  #    contents: write
  #
  #  needs: 
  #    - deploy

  #  if: needs.deploy.result == 'success'
  #    
  #  steps:
  #    - uses: actions/checkout@v4
  #    - name: Use Node.js
  #      uses: actions/setup-node@v3
  #      with:
  #        node-version: '20.x'
  #    - run: npm run clean
  #    - uses: stefanzweifel/git-auto-commit-action@v5

  jslint:
    name: ESlint with comments
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: reviewdog/action-eslint@v1
        with:
          reporter: github-pr-review
          eslint_flags: "src/"
          filter_mode: nofilter
          fail_on_error: true
  
  stylelint:
    name: Stylelint with comments
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: reviewdog/action-stylelint@v1
        with:
          reporter: github-pr-review
          stylelint_input: "src/scss"
          filter_mode: nofilter
          fail_on_error: true
  
  cypress:
    runs-on: ubuntu-22.04

    needs: 
      - deploy

    if: needs.deploy.result == 'success'

    steps:
      - uses: actions/checkout@v4

      - name: Cache cypress
        id: cache-cypress
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/Cypress
            node_modules
          key: cypress-${{ runner.os }}-${{ hashFiles('package-lock.json') }}

      - if: ${{ steps.cache-cypress.outputs.cache-hit != 'true' }}
        name: Install Cypress
        run: npm i cypress

      # and run all Cypress tests
      - name: Cypress run
        uses: cypress-io/github-action@v6
        with:
          config: baseUrl=https://${{ secrets.SHOP_STORE }}
          browser: chrome
          install: false

  lhci:
    name: Lighthouse
    runs-on: ubuntu-latest
    
    needs: 
      - deploy

    if: needs.deploy.result == 'success'

    steps:
      - uses: actions/checkout@v3
      - name: Lighthouse
        uses: shopify/lighthouse-ci-action@v1.1.1
        with:
          store: ${{ secrets.SHOP_STORE }}
          access_token: ${{ secrets.SHOP_ACCESS_TOKEN }}
          password: ${{ secrets.SHOP_PASSWORD }}
          collection_handle: all
          lhci_min_score_performance: 0.6
          lhci_min_score_accessibility: 0.8      
  
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    needs: 
      - jslint
      - stylelint
      - cypress
    
    if: needs.jslint.result == 'success' &&  needs.stylelint.result == 'success' && needs.cypress.result == 'success'

    steps:
      - uses: actions/checkout@v4
      
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: Install dependencies
        run: npm install

      - name: Build
        run: node mode.js && node clean.js && webpack --config webpack.config.js --mode production --progress
      - uses: stefanzweifel/git-auto-commit-action@v5
